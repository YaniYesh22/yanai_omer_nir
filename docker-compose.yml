services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: 1234  # Ensure this matches across all services
      POSTGRES_DB: chartsdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  sqs:
    image: softwaremill/elasticmq:latest
    container_name: sqs
    ports:
      - "9324:9324"
    volumes:
      - ./elasticmq.conf:/elasticmq.conf

  sqs-create:
    image: ubuntu:latest
    container_name: sqs-create
    working_dir: /project
    volumes:
      - ./create-queues.sh:/project/create-queues.sh:ro
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-west-1
      - AWS_ENDPOINT_URL=http://sqs:9324
    entrypoint: sh -c "apt-get update && apt-get install -y curl && sh ./create-queues.sh"
    depends_on:
      - sqs

  data-pipeline:
    build:
      context: .
    ports:
      - "3001:3001"
    container_name: data-pipeline
    environment:
      - NODE_ENV=test
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=root
      - AWS_DEFAULT_REGION=us-west-1
      - AWS_ENDPOINT_URL=http://sqs:9324
      - DATABASE_URL=postgres://myuser:1234@postgres:5432/chartsdb  # Match password with POSTGRES_PASSWORD
    depends_on:
      - sqs-create
      - postgres

  scraper:
    container_name: scraper
    build:
      context: ./scraper
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: test
      AWS_ACCESS_KEY_ID: root
      AWS_SECRET_ACCESS_KEY: root
      AWS_DEFAULT_REGION: us-west-1
      AWS_ENDPOINT_URL: http://sqs:9324
      SQS_QUEUE_URL: http://sqs:9324/queue/data-raw-q
    depends_on:
      - sqs-create
      - postgres

  crud-api:
    build:
      context: ./crud
    ports:
      - "8000:8000"
    container_name: crud-api
    environment:
      DATABASE_URL: postgres://myuser:1234@postgres:5432/chartsdb  # Match password with POSTGRES_PASSWORD
    depends_on:
      - postgres

volumes:
  postgres_data:
